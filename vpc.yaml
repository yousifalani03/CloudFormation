AWSTemplateFormatVersion: '2010-09-09'
Description: 'Cloudformation for vpc'
Resources: 
# My VPC
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '172.16.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

# Public SN in  AZ 1 
PublicSubnet1A:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC #specifies which vpc our subnet belongs to
    CidrBlock: '172.16.1.0/24'
    AvailabilityZone: !Select [0, !GetAZs ''] #which az subnet is in
    MapPublicIpOnLaunch: true #any subnet is auto assigned a public IP
    Tags:
      - Key: Name
        Value: PublicSubnet1A

# Private App SN in AZ 1
AppPrivateSubnet1A:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC
    CidrBlock: '172.16.2.0/24'
    AvailabilityZone: !Select [0, !GetAZs '']
    Tags:
      - Key: Name
        Value: AppPrivateSubnet1A

#Private Data SN in AZ 1
DataPrivateSubnet1A:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC
    CidrBlock: '172.16.3.0/24'
    AvailabilityZone: !Select [0, !GetAZs '']
    Tags:
      - Key: Name
        Value: DataPrivateSubnet1A

#Now for the second AZ

# Public SN2 AZ 2
PublicSubnet2B:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC
    CidrBlock: '172.16.4.0/24'
    AvailabilityZone: !Select [1, !GetAZs '']
    MapPublicIpOnLaunch: true
    Tags:
      - Key: Name
        Value: PublicSubnet2B

# Private App SN2 in AZ2
AppPrivateSubnet2B:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC
    CidrBlock: '172.16.5.0/24'
    AvailabilityZone: !Select [1, !GetAZs '']
    Tags:
      - Key: Name
        Value: AppPrivateSubnet2B

# Private Data SN2 in AZ2
DataPrivateSubnet2B:
  Type: 'AWS::EC2::Subnet'
  Properties:
    VpcId: !Ref MyVPC
    CidrBlock: '172.16.6.0/24'
    AvailabilityZone: !Select [1, !GetAZs '']
    Tags:
      - Key: Name
        Value: DataPrivateSubnet2B